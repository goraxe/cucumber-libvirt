cucumber-vhost
==============

This was designed and written to enable me to test code on Virtual Machines without having to worry if they were provisioned correctly

The system relies on Cobbler and Libvirt - there are a few posts on getting cobbler up and running on my blog: http://www.threedrunkensysadsonthe.net/

This is also still in beta!

The software contained in this package are Copyright (c) 2010 Matthew Macdonald-Wallace and are released under the GPL

"cucumber-vhost" is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

"cucumber-vhost" is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with cucumber-vhost.  If not, see <http://www.gnu.org/licenses/&gt;.



EXAMPLE 
=======

This script is the basis for launching a VM and checking that it is up
After that, it's all over to you! :)

An example that uses all of the steps that are currently available is below (Comments at the end of each line following a #), feel free to add extra steps...

Feature: Testing Vhosts
	This feature is to be used to create and manage vhosts

	Scenario: Provision the server
		Given that I want to build a server of type "test"   		# "test" is the name of the system in cobbler
		Then I should be able to connect to the provisioning server  	# This retrieves the hash from cobbler
		And I should recieve an XML file				# This craetes the libvirt XML format
		And I should create the virtual machine				# This defines the domain and launches the virtual machine

	Scenario: Check the server has been built
		Given that I want to confirm the server "test" has been provisioned  	# connect to cobbler and retrieve the hostname
		Then I should check the status of the server				# connect to libvirt and check the status
		And the server should have a status of "running"			# confirm the status is either "running" or "stopped"

	Scenario: Check the server has powered on correctly
		Given that I want to confirm the server "test" is running		# connect to cobbler and retrieve the hostname
		Then I should check the status of the server				# connect to libvirt and check the status
		And the server should be "running"					# confirm the status is either "running" or "stoped"
		Then I should ping the server 						# ping the server on the IP retrieved from cobbler until it suceeds
		And then I should be able to connect via SSH				# connect using Net::SSH and verify that you get a response
